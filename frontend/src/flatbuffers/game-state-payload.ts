// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { CrazyCountingHostEntitiesPayload } from './crazy-counting-host-entities-payload.js';
import { CrazyCountingPlayerInputPayload } from './crazy-counting-player-input-payload.js';
import { CrazyCountingPlayerUpdatePayload } from './crazy-counting-player-update-payload.js';


export enum GameStatePayload {
  NONE = 0,
  CrazyCountingPlayerUpdatePayload = 1,
  CrazyCountingHostEntitiesPayload = 2,
  CrazyCountingPlayerInputPayload = 3
}

export function unionToGameStatePayload(
  type: GameStatePayload,
  accessor: (obj:CrazyCountingHostEntitiesPayload|CrazyCountingPlayerInputPayload|CrazyCountingPlayerUpdatePayload) => CrazyCountingHostEntitiesPayload|CrazyCountingPlayerInputPayload|CrazyCountingPlayerUpdatePayload|null
): CrazyCountingHostEntitiesPayload|CrazyCountingPlayerInputPayload|CrazyCountingPlayerUpdatePayload|null {
  switch(GameStatePayload[type]) {
    case 'NONE': return null; 
    case 'CrazyCountingPlayerUpdatePayload': return accessor(new CrazyCountingPlayerUpdatePayload())! as CrazyCountingPlayerUpdatePayload;
    case 'CrazyCountingHostEntitiesPayload': return accessor(new CrazyCountingHostEntitiesPayload())! as CrazyCountingHostEntitiesPayload;
    case 'CrazyCountingPlayerInputPayload': return accessor(new CrazyCountingPlayerInputPayload())! as CrazyCountingPlayerInputPayload;
    default: return null;
  }
}

export function unionListToGameStatePayload(
  type: GameStatePayload, 
  accessor: (index: number, obj:CrazyCountingHostEntitiesPayload|CrazyCountingPlayerInputPayload|CrazyCountingPlayerUpdatePayload) => CrazyCountingHostEntitiesPayload|CrazyCountingPlayerInputPayload|CrazyCountingPlayerUpdatePayload|null, 
  index: number
): CrazyCountingHostEntitiesPayload|CrazyCountingPlayerInputPayload|CrazyCountingPlayerUpdatePayload|null {
  switch(GameStatePayload[type]) {
    case 'NONE': return null; 
    case 'CrazyCountingPlayerUpdatePayload': return accessor(index, new CrazyCountingPlayerUpdatePayload())! as CrazyCountingPlayerUpdatePayload;
    case 'CrazyCountingHostEntitiesPayload': return accessor(index, new CrazyCountingHostEntitiesPayload())! as CrazyCountingHostEntitiesPayload;
    case 'CrazyCountingPlayerInputPayload': return accessor(index, new CrazyCountingPlayerInputPayload())! as CrazyCountingPlayerInputPayload;
    default: return null;
  }
}
