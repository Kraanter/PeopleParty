// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class RightOnTimePlayerTimePayload {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):RightOnTimePlayerTimePayload {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsRightOnTimePlayerTimePayload(bb:flatbuffers.ByteBuffer, obj?:RightOnTimePlayerTimePayload):RightOnTimePlayerTimePayload {
  return (obj || new RightOnTimePlayerTimePayload()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsRightOnTimePlayerTimePayload(bb:flatbuffers.ByteBuffer, obj?:RightOnTimePlayerTimePayload):RightOnTimePlayerTimePayload {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new RightOnTimePlayerTimePayload()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

time():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startRightOnTimePlayerTimePayload(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addTime(builder:flatbuffers.Builder, time:bigint) {
  builder.addFieldInt64(0, time, BigInt('0'));
}

static endRightOnTimePlayerTimePayload(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createRightOnTimePlayerTimePayload(builder:flatbuffers.Builder, time:bigint):flatbuffers.Offset {
  RightOnTimePlayerTimePayload.startRightOnTimePlayerTimePayload(builder);
  RightOnTimePlayerTimePayload.addTime(builder, time);
  return RightOnTimePlayerTimePayload.endRightOnTimePlayerTimePayload(builder);
}
}
