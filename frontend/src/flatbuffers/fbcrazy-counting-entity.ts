// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class FBCrazyCountingEntity {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FBCrazyCountingEntity {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFBCrazyCountingEntity(bb:flatbuffers.ByteBuffer, obj?:FBCrazyCountingEntity):FBCrazyCountingEntity {
  return (obj || new FBCrazyCountingEntity()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFBCrazyCountingEntity(bb:flatbuffers.ByteBuffer, obj?:FBCrazyCountingEntity):FBCrazyCountingEntity {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FBCrazyCountingEntity()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

xPos():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

yPos():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static startFBCrazyCountingEntity(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addXPos(builder:flatbuffers.Builder, xPos:number) {
  builder.addFieldFloat32(0, xPos, 0.0);
}

static addYPos(builder:flatbuffers.Builder, yPos:number) {
  builder.addFieldFloat32(1, yPos, 0.0);
}

static endFBCrazyCountingEntity(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createFBCrazyCountingEntity(builder:flatbuffers.Builder, xPos:number, yPos:number):flatbuffers.Offset {
  FBCrazyCountingEntity.startFBCrazyCountingEntity(builder);
  FBCrazyCountingEntity.addXPos(builder, xPos);
  FBCrazyCountingEntity.addYPos(builder, yPos);
  return FBCrazyCountingEntity.endFBCrazyCountingEntity(builder);
}
}
