// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class PartyPrepPlayerInformationPayload {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PartyPrepPlayerInformationPayload {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPartyPrepPlayerInformationPayload(bb:flatbuffers.ByteBuffer, obj?:PartyPrepPlayerInformationPayload):PartyPrepPlayerInformationPayload {
  return (obj || new PartyPrepPlayerInformationPayload()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPartyPrepPlayerInformationPayload(bb:flatbuffers.ByteBuffer, obj?:PartyPrepPlayerInformationPayload):PartyPrepPlayerInformationPayload {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PartyPrepPlayerInformationPayload()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

roomId():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startPartyPrepPlayerInformationPayload(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addRoomId(builder:flatbuffers.Builder, roomId:bigint) {
  builder.addFieldInt64(0, roomId, BigInt('0'));
}

static endPartyPrepPlayerInformationPayload(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPartyPrepPlayerInformationPayload(builder:flatbuffers.Builder, roomId:bigint):flatbuffers.Offset {
  PartyPrepPlayerInformationPayload.startPartyPrepPlayerInformationPayload(builder);
  PartyPrepPlayerInformationPayload.addRoomId(builder, roomId);
  return PartyPrepPlayerInformationPayload.endPartyPrepPlayerInformationPayload(builder);
}
}
