// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class FBLaunchPartyResultPair {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FBLaunchPartyResultPair {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFBLaunchPartyResultPair(bb:flatbuffers.ByteBuffer, obj?:FBLaunchPartyResultPair):FBLaunchPartyResultPair {
  return (obj || new FBLaunchPartyResultPair()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFBLaunchPartyResultPair(bb:flatbuffers.ByteBuffer, obj?:FBLaunchPartyResultPair):FBLaunchPartyResultPair {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FBLaunchPartyResultPair()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

reactionTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

static startFBLaunchPartyResultPair(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nameOffset, 0);
}

static addReactionTime(builder:flatbuffers.Builder, reactionTime:bigint) {
  builder.addFieldInt64(1, reactionTime, BigInt('0'));
}

static endFBLaunchPartyResultPair(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createFBLaunchPartyResultPair(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset, reactionTime:bigint):flatbuffers.Offset {
  FBLaunchPartyResultPair.startFBLaunchPartyResultPair(builder);
  FBLaunchPartyResultPair.addName(builder, nameOffset);
  FBLaunchPartyResultPair.addReactionTime(builder, reactionTime);
  return FBLaunchPartyResultPair.endFBLaunchPartyResultPair(builder);
}
}
