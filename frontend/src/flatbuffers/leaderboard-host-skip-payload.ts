// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class LeaderboardHostSkipPayload {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LeaderboardHostSkipPayload {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLeaderboardHostSkipPayload(bb:flatbuffers.ByteBuffer, obj?:LeaderboardHostSkipPayload):LeaderboardHostSkipPayload {
  return (obj || new LeaderboardHostSkipPayload()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLeaderboardHostSkipPayload(bb:flatbuffers.ByteBuffer, obj?:LeaderboardHostSkipPayload):LeaderboardHostSkipPayload {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LeaderboardHostSkipPayload()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

skip():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startLeaderboardHostSkipPayload(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addSkip(builder:flatbuffers.Builder, skip:boolean) {
  builder.addFieldInt8(0, +skip, +false);
}

static endLeaderboardHostSkipPayload(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLeaderboardHostSkipPayload(builder:flatbuffers.Builder, skip:boolean):flatbuffers.Offset {
  LeaderboardHostSkipPayload.startLeaderboardHostSkipPayload(builder);
  LeaderboardHostSkipPayload.addSkip(builder, skip);
  return LeaderboardHostSkipPayload.endLeaderboardHostSkipPayload(builder);
}
}
