// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { LeaderboardPayload, unionToLeaderboardPayload, unionListToLeaderboardPayload } from './leaderboard-payload.js';
import { LeaderboardType } from './leaderboard-type.js';


export class LeaderboardPayloadType {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LeaderboardPayloadType {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLeaderboardPayloadType(bb:flatbuffers.ByteBuffer, obj?:LeaderboardPayloadType):LeaderboardPayloadType {
  return (obj || new LeaderboardPayloadType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLeaderboardPayloadType(bb:flatbuffers.ByteBuffer, obj?:LeaderboardPayloadType):LeaderboardPayloadType {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LeaderboardPayloadType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

leaderboardtype():LeaderboardType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : LeaderboardType.LeaderboardInformation;
}

leaderboardpayloadType():LeaderboardPayload {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : LeaderboardPayload.NONE;
}

leaderboardpayload<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startLeaderboardPayloadType(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addLeaderboardtype(builder:flatbuffers.Builder, leaderboardtype:LeaderboardType) {
  builder.addFieldInt8(0, leaderboardtype, LeaderboardType.LeaderboardInformation);
}

static addLeaderboardpayloadType(builder:flatbuffers.Builder, leaderboardpayloadType:LeaderboardPayload) {
  builder.addFieldInt8(1, leaderboardpayloadType, LeaderboardPayload.NONE);
}

static addLeaderboardpayload(builder:flatbuffers.Builder, leaderboardpayloadOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, leaderboardpayloadOffset, 0);
}

static endLeaderboardPayloadType(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLeaderboardPayloadType(builder:flatbuffers.Builder, leaderboardtype:LeaderboardType, leaderboardpayloadType:LeaderboardPayload, leaderboardpayloadOffset:flatbuffers.Offset):flatbuffers.Offset {
  LeaderboardPayloadType.startLeaderboardPayloadType(builder);
  LeaderboardPayloadType.addLeaderboardtype(builder, leaderboardtype);
  LeaderboardPayloadType.addLeaderboardpayloadType(builder, leaderboardpayloadType);
  LeaderboardPayloadType.addLeaderboardpayload(builder, leaderboardpayloadOffset);
  return LeaderboardPayloadType.endLeaderboardPayloadType(builder);
}
}
