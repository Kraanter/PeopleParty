name: Publish staging images

on:
  push:
    branches:
      - staging
  workflow_dispatch:
    inputs:
      deploy-skylab:
        description: 'deploy to Skylab'
        type: boolean
        default: true 

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: kraanter/peopleparty

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: write
      packages: write
      #
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: tag and push frontend image
        run: |
          docker build --push \
            --tag ghcr.io/${{ env.IMAGE_NAME }}portal:staging frontend/.
      - name: tag and push backend image
        run: |
          docker build --push \
            --tag ghcr.io/${{ env.IMAGE_NAME }}backend:staging backend/.
      - name: Clean up dangling images
        run: docker image prune -f -a
  deploy-skylab:
    needs: "build-and-push-image"
    uses: ./.github/workflows/staging-deploy.yml
    if: ${{ inputs.deploy-skylab || github.ref === 'refs/heads/staging' }}
    secrets: inherit

