// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: game_com.proto
// Protobuf C++ Version: 5.28.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_game_5fcom_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_game_5fcom_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_game_5fcom_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_game_5fcom_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_game_5fcom_2eproto;
class ProtoGameState;
struct ProtoGameStateDefaultTypeInternal;
extern ProtoGameStateDefaultTypeInternal _ProtoGameState_default_instance_;
class ProtoGameState_PlayersEntry_DoNotUse;
struct ProtoGameState_PlayersEntry_DoNotUseDefaultTypeInternal;
extern ProtoGameState_PlayersEntry_DoNotUseDefaultTypeInternal _ProtoGameState_PlayersEntry_DoNotUse_default_instance_;
class Proto_GameUpdate;
struct Proto_GameUpdateDefaultTypeInternal;
extern Proto_GameUpdateDefaultTypeInternal _Proto_GameUpdate_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum PROTO_GAME_UPDATE_REASON : int {
  GAME_TICK = 0,
  PLAYER_INPUT = 1,
  PROTO_GAME_UPDATE_REASON_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PROTO_GAME_UPDATE_REASON_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PROTO_GAME_UPDATE_REASON_IsValid(int value);
extern const uint32_t PROTO_GAME_UPDATE_REASON_internal_data_[];
constexpr PROTO_GAME_UPDATE_REASON PROTO_GAME_UPDATE_REASON_MIN = static_cast<PROTO_GAME_UPDATE_REASON>(0);
constexpr PROTO_GAME_UPDATE_REASON PROTO_GAME_UPDATE_REASON_MAX = static_cast<PROTO_GAME_UPDATE_REASON>(1);
constexpr int PROTO_GAME_UPDATE_REASON_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
PROTO_GAME_UPDATE_REASON_descriptor();
template <typename T>
const std::string& PROTO_GAME_UPDATE_REASON_Name(T value) {
  static_assert(std::is_same<T, PROTO_GAME_UPDATE_REASON>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PROTO_GAME_UPDATE_REASON_Name().");
  return PROTO_GAME_UPDATE_REASON_Name(static_cast<PROTO_GAME_UPDATE_REASON>(value));
}
template <>
inline const std::string& PROTO_GAME_UPDATE_REASON_Name(PROTO_GAME_UPDATE_REASON value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PROTO_GAME_UPDATE_REASON_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool PROTO_GAME_UPDATE_REASON_Parse(absl::string_view name, PROTO_GAME_UPDATE_REASON* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PROTO_GAME_UPDATE_REASON>(
      PROTO_GAME_UPDATE_REASON_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ProtoGameState_PlayersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ProtoGameState_PlayersEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ProtoGameState_PlayersEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ProtoGameState_PlayersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProtoGameState_PlayersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ProtoGameState_PlayersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ProtoGameState_PlayersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ProtoGameState_PlayersEntry_DoNotUse*>(
        &_ProtoGameState_PlayersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      44, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_game_5fcom_2eproto;
};
// -------------------------------------------------------------------

class ProtoGameState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ProtoGameState) */ {
 public:
  inline ProtoGameState() : ProtoGameState(nullptr) {}
  ~ProtoGameState() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProtoGameState(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProtoGameState(const ProtoGameState& from) : ProtoGameState(nullptr, from) {}
  inline ProtoGameState(ProtoGameState&& from) noexcept
      : ProtoGameState(nullptr, std::move(from)) {}
  inline ProtoGameState& operator=(const ProtoGameState& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoGameState& operator=(ProtoGameState&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtoGameState& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProtoGameState* internal_default_instance() {
    return reinterpret_cast<const ProtoGameState*>(
        &_ProtoGameState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ProtoGameState& a, ProtoGameState& b) { a.Swap(&b); }
  inline void Swap(ProtoGameState* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoGameState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtoGameState* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ProtoGameState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProtoGameState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProtoGameState& from) { ProtoGameState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ProtoGameState* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "ProtoGameState"; }

 protected:
  explicit ProtoGameState(::google::protobuf::Arena* arena);
  ProtoGameState(::google::protobuf::Arena* arena, const ProtoGameState& from);
  ProtoGameState(::google::protobuf::Arena* arena, ProtoGameState&& from) noexcept
      : ProtoGameState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayersFieldNumber = 3,
    kHostFieldNumber = 1,
    kGlobalFieldNumber = 2,
  };
  // map<string, string> players = 3;
  int players_size() const;
  private:
  int _internal_players_size() const;

  public:
  void clear_players() ;
  const ::google::protobuf::Map<std::string, std::string>& players() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_players();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_players() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_players();

  public:
  // string host = 1;
  void clear_host() ;
  const std::string& host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_host(Arg_&& arg, Args_... args);
  std::string* mutable_host();
  PROTOBUF_NODISCARD std::string* release_host();
  void set_allocated_host(std::string* value);

  private:
  const std::string& _internal_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_host(
      const std::string& value);
  std::string* _internal_mutable_host();

  public:
  // string global = 2;
  void clear_global() ;
  const std::string& global() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_global(Arg_&& arg, Args_... args);
  std::string* mutable_global();
  PROTOBUF_NODISCARD std::string* release_global();
  void set_allocated_global(std::string* value);

  private:
  const std::string& _internal_global() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_global(
      const std::string& value);
  std::string* _internal_mutable_global();

  public:
  // @@protoc_insertion_point(class_scope:ProtoGameState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 1,
      40, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ProtoGameState_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProtoGameState& from_msg);
    ::google::protobuf::internal::MapField<ProtoGameState_PlayersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        players_;
    ::google::protobuf::internal::ArenaStringPtr host_;
    ::google::protobuf::internal::ArenaStringPtr global_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_5fcom_2eproto;
};
// -------------------------------------------------------------------

class Proto_GameUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Proto_GameUpdate) */ {
 public:
  inline Proto_GameUpdate() : Proto_GameUpdate(nullptr) {}
  ~Proto_GameUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Proto_GameUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline Proto_GameUpdate(const Proto_GameUpdate& from) : Proto_GameUpdate(nullptr, from) {}
  inline Proto_GameUpdate(Proto_GameUpdate&& from) noexcept
      : Proto_GameUpdate(nullptr, std::move(from)) {}
  inline Proto_GameUpdate& operator=(const Proto_GameUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline Proto_GameUpdate& operator=(Proto_GameUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Proto_GameUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const Proto_GameUpdate* internal_default_instance() {
    return reinterpret_cast<const Proto_GameUpdate*>(
        &_Proto_GameUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Proto_GameUpdate& a, Proto_GameUpdate& b) { a.Swap(&b); }
  inline void Swap(Proto_GameUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Proto_GameUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Proto_GameUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Proto_GameUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Proto_GameUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Proto_GameUpdate& from) { Proto_GameUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Proto_GameUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Proto_GameUpdate"; }

 protected:
  explicit Proto_GameUpdate(::google::protobuf::Arena* arena);
  Proto_GameUpdate(::google::protobuf::Arena* arena, const Proto_GameUpdate& from);
  Proto_GameUpdate(::google::protobuf::Arena* arena, Proto_GameUpdate&& from) noexcept
      : Proto_GameUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPayloadFieldNumber = 3,
    kPlayernameFieldNumber = 5,
    kGameStateFieldNumber = 2,
    kReasonFieldNumber = 1,
    kDeltaTimeFieldNumber = 4,
  };
  // string payload = 3;
  void clear_payload() ;
  const std::string& payload() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payload(Arg_&& arg, Args_... args);
  std::string* mutable_payload();
  PROTOBUF_NODISCARD std::string* release_payload();
  void set_allocated_payload(std::string* value);

  private:
  const std::string& _internal_payload() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payload(
      const std::string& value);
  std::string* _internal_mutable_payload();

  public:
  // optional string playername = 5;
  bool has_playername() const;
  void clear_playername() ;
  const std::string& playername() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_playername(Arg_&& arg, Args_... args);
  std::string* mutable_playername();
  PROTOBUF_NODISCARD std::string* release_playername();
  void set_allocated_playername(std::string* value);

  private:
  const std::string& _internal_playername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_playername(
      const std::string& value);
  std::string* _internal_mutable_playername();

  public:
  // .ProtoGameState gameState = 2;
  bool has_gamestate() const;
  void clear_gamestate() ;
  const ::ProtoGameState& gamestate() const;
  PROTOBUF_NODISCARD ::ProtoGameState* release_gamestate();
  ::ProtoGameState* mutable_gamestate();
  void set_allocated_gamestate(::ProtoGameState* value);
  void unsafe_arena_set_allocated_gamestate(::ProtoGameState* value);
  ::ProtoGameState* unsafe_arena_release_gamestate();

  private:
  const ::ProtoGameState& _internal_gamestate() const;
  ::ProtoGameState* _internal_mutable_gamestate();

  public:
  // .PROTO_GAME_UPDATE_REASON reason = 1;
  void clear_reason() ;
  ::PROTO_GAME_UPDATE_REASON reason() const;
  void set_reason(::PROTO_GAME_UPDATE_REASON value);

  private:
  ::PROTO_GAME_UPDATE_REASON _internal_reason() const;
  void _internal_set_reason(::PROTO_GAME_UPDATE_REASON value);

  public:
  // int32 deltaTime = 4;
  void clear_deltatime() ;
  ::int32_t deltatime() const;
  void set_deltatime(::int32_t value);

  private:
  ::int32_t _internal_deltatime() const;
  void _internal_set_deltatime(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Proto_GameUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Proto_GameUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Proto_GameUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr payload_;
    ::google::protobuf::internal::ArenaStringPtr playername_;
    ::ProtoGameState* gamestate_;
    int reason_;
    ::int32_t deltatime_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_5fcom_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ProtoGameState

// string host = 1;
inline void ProtoGameState::clear_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.ClearToEmpty();
}
inline const std::string& ProtoGameState::host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProtoGameState.host)
  return _internal_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProtoGameState::set_host(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProtoGameState.host)
}
inline std::string* ProtoGameState::mutable_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_host();
  // @@protoc_insertion_point(field_mutable:ProtoGameState.host)
  return _s;
}
inline const std::string& ProtoGameState::_internal_host() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.host_.Get();
}
inline void ProtoGameState::_internal_set_host(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.Set(value, GetArena());
}
inline std::string* ProtoGameState::_internal_mutable_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.host_.Mutable( GetArena());
}
inline std::string* ProtoGameState::release_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProtoGameState.host)
  return _impl_.host_.Release();
}
inline void ProtoGameState::set_allocated_host(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.host_.IsDefault()) {
          _impl_.host_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoGameState.host)
}

// string global = 2;
inline void ProtoGameState::clear_global() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.global_.ClearToEmpty();
}
inline const std::string& ProtoGameState::global() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProtoGameState.global)
  return _internal_global();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProtoGameState::set_global(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.global_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProtoGameState.global)
}
inline std::string* ProtoGameState::mutable_global() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_global();
  // @@protoc_insertion_point(field_mutable:ProtoGameState.global)
  return _s;
}
inline const std::string& ProtoGameState::_internal_global() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.global_.Get();
}
inline void ProtoGameState::_internal_set_global(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.global_.Set(value, GetArena());
}
inline std::string* ProtoGameState::_internal_mutable_global() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.global_.Mutable( GetArena());
}
inline std::string* ProtoGameState::release_global() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProtoGameState.global)
  return _impl_.global_.Release();
}
inline void ProtoGameState::set_allocated_global(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.global_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.global_.IsDefault()) {
          _impl_.global_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoGameState.global)
}

// map<string, string> players = 3;
inline int ProtoGameState::_internal_players_size() const {
  return _internal_players().size();
}
inline int ProtoGameState::players_size() const {
  return _internal_players_size();
}
inline void ProtoGameState::clear_players() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.players_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ProtoGameState::_internal_players() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.players_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ProtoGameState::players() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:ProtoGameState.players)
  return _internal_players();
}
inline ::google::protobuf::Map<std::string, std::string>* ProtoGameState::_internal_mutable_players() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.players_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ProtoGameState::mutable_players() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:ProtoGameState.players)
  return _internal_mutable_players();
}

// -------------------------------------------------------------------

// Proto_GameUpdate

// .PROTO_GAME_UPDATE_REASON reason = 1;
inline void Proto_GameUpdate::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_ = 0;
}
inline ::PROTO_GAME_UPDATE_REASON Proto_GameUpdate::reason() const {
  // @@protoc_insertion_point(field_get:Proto_GameUpdate.reason)
  return _internal_reason();
}
inline void Proto_GameUpdate::set_reason(::PROTO_GAME_UPDATE_REASON value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:Proto_GameUpdate.reason)
}
inline ::PROTO_GAME_UPDATE_REASON Proto_GameUpdate::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::PROTO_GAME_UPDATE_REASON>(_impl_.reason_);
}
inline void Proto_GameUpdate::_internal_set_reason(::PROTO_GAME_UPDATE_REASON value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_ = value;
}

// .ProtoGameState gameState = 2;
inline bool Proto_GameUpdate::has_gamestate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.gamestate_ != nullptr);
  return value;
}
inline void Proto_GameUpdate::clear_gamestate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gamestate_ != nullptr) _impl_.gamestate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::ProtoGameState& Proto_GameUpdate::_internal_gamestate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ProtoGameState* p = _impl_.gamestate_;
  return p != nullptr ? *p : reinterpret_cast<const ::ProtoGameState&>(::_ProtoGameState_default_instance_);
}
inline const ::ProtoGameState& Proto_GameUpdate::gamestate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Proto_GameUpdate.gameState)
  return _internal_gamestate();
}
inline void Proto_GameUpdate::unsafe_arena_set_allocated_gamestate(::ProtoGameState* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gamestate_);
  }
  _impl_.gamestate_ = reinterpret_cast<::ProtoGameState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Proto_GameUpdate.gameState)
}
inline ::ProtoGameState* Proto_GameUpdate::release_gamestate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ProtoGameState* released = _impl_.gamestate_;
  _impl_.gamestate_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ProtoGameState* Proto_GameUpdate::unsafe_arena_release_gamestate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Proto_GameUpdate.gameState)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ProtoGameState* temp = _impl_.gamestate_;
  _impl_.gamestate_ = nullptr;
  return temp;
}
inline ::ProtoGameState* Proto_GameUpdate::_internal_mutable_gamestate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gamestate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ProtoGameState>(GetArena());
    _impl_.gamestate_ = reinterpret_cast<::ProtoGameState*>(p);
  }
  return _impl_.gamestate_;
}
inline ::ProtoGameState* Proto_GameUpdate::mutable_gamestate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::ProtoGameState* _msg = _internal_mutable_gamestate();
  // @@protoc_insertion_point(field_mutable:Proto_GameUpdate.gameState)
  return _msg;
}
inline void Proto_GameUpdate::set_allocated_gamestate(::ProtoGameState* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.gamestate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.gamestate_ = reinterpret_cast<::ProtoGameState*>(value);
  // @@protoc_insertion_point(field_set_allocated:Proto_GameUpdate.gameState)
}

// string payload = 3;
inline void Proto_GameUpdate::clear_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.ClearToEmpty();
}
inline const std::string& Proto_GameUpdate::payload() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Proto_GameUpdate.payload)
  return _internal_payload();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Proto_GameUpdate::set_payload(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Proto_GameUpdate.payload)
}
inline std::string* Proto_GameUpdate::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:Proto_GameUpdate.payload)
  return _s;
}
inline const std::string& Proto_GameUpdate::_internal_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payload_.Get();
}
inline void Proto_GameUpdate::_internal_set_payload(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.Set(value, GetArena());
}
inline std::string* Proto_GameUpdate::_internal_mutable_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payload_.Mutable( GetArena());
}
inline std::string* Proto_GameUpdate::release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Proto_GameUpdate.payload)
  return _impl_.payload_.Release();
}
inline void Proto_GameUpdate::set_allocated_payload(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payload_.IsDefault()) {
          _impl_.payload_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Proto_GameUpdate.payload)
}

// int32 deltaTime = 4;
inline void Proto_GameUpdate::clear_deltatime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deltatime_ = 0;
}
inline ::int32_t Proto_GameUpdate::deltatime() const {
  // @@protoc_insertion_point(field_get:Proto_GameUpdate.deltaTime)
  return _internal_deltatime();
}
inline void Proto_GameUpdate::set_deltatime(::int32_t value) {
  _internal_set_deltatime(value);
  // @@protoc_insertion_point(field_set:Proto_GameUpdate.deltaTime)
}
inline ::int32_t Proto_GameUpdate::_internal_deltatime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deltatime_;
}
inline void Proto_GameUpdate::_internal_set_deltatime(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deltatime_ = value;
}

// optional string playername = 5;
inline bool Proto_GameUpdate::has_playername() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Proto_GameUpdate::clear_playername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playername_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Proto_GameUpdate::playername() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Proto_GameUpdate.playername)
  return _internal_playername();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Proto_GameUpdate::set_playername(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.playername_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Proto_GameUpdate.playername)
}
inline std::string* Proto_GameUpdate::mutable_playername() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_playername();
  // @@protoc_insertion_point(field_mutable:Proto_GameUpdate.playername)
  return _s;
}
inline const std::string& Proto_GameUpdate::_internal_playername() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playername_.Get();
}
inline void Proto_GameUpdate::_internal_set_playername(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.playername_.Set(value, GetArena());
}
inline std::string* Proto_GameUpdate::_internal_mutable_playername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.playername_.Mutable( GetArena());
}
inline std::string* Proto_GameUpdate::release_playername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Proto_GameUpdate.playername)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.playername_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.playername_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Proto_GameUpdate::set_allocated_playername(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.playername_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.playername_.IsDefault()) {
          _impl_.playername_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Proto_GameUpdate.playername)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::PROTO_GAME_UPDATE_REASON> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::PROTO_GAME_UPDATE_REASON>() {
  return ::PROTO_GAME_UPDATE_REASON_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_game_5fcom_2eproto_2epb_2eh
